{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef, EventEmitter, QueryList } from '@angular/core';\nimport * as CKSource from '../../../vendor/ckeditor5/build/cksource';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ckeditor/ckeditor5-angular\";\nconst _c0 = [\"sidebar\"];\nconst _c1 = [\"presenceList\"];\nconst _c2 = [\"customControl\"];\nexport let EditorComponent = /*#__PURE__*/(() => {\n  class EditorComponent {\n    constructor() {\n      this.ready = new EventEmitter();\n      this.Editor = CKSource.ClassicEditor;\n      this.data = this.getInitialData();\n      // Note that Angular refs can be used once the view is initialized so we need to create\n      // these containers and use in the above editor configuration to workaround this problem.\n      this.sidebar = document.createElement('div');\n      this.presenceList = document.createElement('div');\n    }\n    get editorConfig1() {\n      return {\n        collaboration: {\n          channelId: this.channelId + '-foo'\n        },\n        ckbox: {\n          tokenUrl: this.configuration.ckboxTokenUrl || this.configuration.tokenUrl\n        }\n      };\n    }\n    get editorConfig2() {\n      return {\n        collaboration: {\n          channelId: this.channelId + '-bar'\n        }\n      };\n    }\n    ngOnInit() {\n      window.CKBox = CKSource.CKBox;\n      const contextConfig = {\n        cloudServices: {\n          tokenUrl: this.configuration.tokenUrl,\n          webSocketUrl: this.configuration.webSocketUrl\n        },\n        collaboration: {\n          channelId: this.channelId\n        },\n        sidebar: {\n          container: this.sidebar\n        },\n        presenceList: {\n          container: this.presenceList\n        }\n      };\n      this.watchdog = new CKSource.ContextWatchdog(CKSource.Context);\n      this.watchdog.setCreator(config => __awaiter(this, void 0, void 0, function* () {\n        const context = yield CKSource.Context.create(config);\n        this.initIntegration(context);\n        return context;\n      }));\n      this.watchdog.create(contextConfig).then(() => {\n        console.log('ready');\n      });\n    }\n    ngAfterViewInit() {\n      if (!this.sidebarContainer || !this.presenceListContainer) {\n        throw new Error('Div containers for sidebar or presence list were not found');\n      }\n      this.sidebarContainer.nativeElement.appendChild(this.sidebar);\n      this.presenceListContainer.nativeElement.appendChild(this.presenceList);\n    }\n    onClick(event, threadId) {\n      const context = this.watchdog.context;\n      const repository = context.plugins.get('CommentsRepository');\n      const channelId = context.config.get('collaboration.channelId');\n      // DOM element that is a container for the button and the form field element.\n      const fieldHolder = event.currentTarget.parentNode;\n      if (!repository.hasCommentThread(threadId)) {\n        // Creates a new, empty, local comment thread.\n        // Creates annotation view (sidebar balloon) for the thread and attaches it to `fieldHolder`.\n        // Sets the comment thread and active and focuses selection in the comment input field.\n        repository.openNewCommentThread({\n          channelId,\n          threadId,\n          target: fieldHolder\n        });\n      } else {\n        // Sets the comment as active. Triggers events.\n        repository.setActiveCommentThread(threadId);\n      }\n    }\n    initIntegration(context) {\n      const channelId = context.config.get('collaboration.channelId');\n      // The API to handle comments outside of editor is available through `CommentsRepository` and `Annotations` plugins.\n      // These are context plugins which operate outside of editor instance.\n      //\n      // `CommentsRepository` is all about handling comments. It fires some useful events and\n      // contains methods to handle the comments. See the usage below.\n      //\n      // `Annotations` is about comments balloons and can be used, among others, to implement\n      // your own sidebar.\n      const repository = context.plugins.get('CommentsRepository');\n      const annotations = context.plugins.get('Annotations');\n      const controls = this.customControls;\n      // Handle non-editor comments that were loaded when comments adapter (context plugin) was initialized.\n      //\n      // At this moment, the initial comments has been loaded by the Cloud Services comments adapter.\n      // Some of them were editor comments and those will be handled by the editor comments plugin.\n      // However, comments set on non-editor fields need to be handled separately.\n      for (const thread of repository.getCommentThreads({\n        channelId\n      })) {\n        _handleCommentThread(thread);\n      }\n      // Handle non-editor comments that are being added to the comments repository.\n      //\n      // Editor comments are handled by the editor comments plugin.\n      // However, comments set on non-editor fields need to be handled separately.\n      // This handles both comments coming from other clients and the comments created locally.\n      //\n      // Note that the event name contains the context `channelId`. This way we are\n      // listening only to the comments added to the context channel (so, added on non-editor fields).\n      repository.on('addCommentThread:' + channelId, (evt, {\n        threadId\n      }) => {\n        _handleCommentThread(repository.getCommentThread(threadId));\n      }, {\n        priority: 'low'\n      });\n      // As above. Listen to non-editor comments that are removed.\n      repository.on('removeCommentThread:' + channelId, (evt, {\n        threadId\n      }) => {\n        const fieldHolder = this.customControls.find(item => item.nativeElement.id === threadId).nativeElement;\n        fieldHolder.classList.remove('has-comment', 'active');\n      }, {\n        priority: 'low'\n      });\n      // Handle a situation when the active comment changes.\n      // If the active comment is a non-editor comment, there is a need to highlight that field.\n      repository.on('change:activeCommentThread', (evt, name, thread) => {\n        // Remove highlight from previously highlighted field.\n        this.customControls.forEach(item => {\n          item.nativeElement.classList.remove('active');\n        });\n        // Highlight another field, if applicable.\n        if (thread) {\n          const fieldHolderContainer = this.customControls.find(item => item.nativeElement.id === thread.id);\n          if (fieldHolderContainer) {\n            fieldHolderContainer.nativeElement.classList.add('active');\n          }\n        }\n      });\n      // Handle new non-editor comment thread.\n      function _handleCommentThread(thread) {\n        // DOM element connected with the thread & annotation.\n        const fieldHolder = controls.find(container => container.nativeElement.id === thread.id).nativeElement;\n        // If the thread is not attached to a DOM element (target) yet, attach it.\n        // `openNewCommentThread` takes `target` parameter and attaches the thread to the target when the thread is being created.\n        // However, comment threads coming from remote clients need to be handled.\n        // Since this function (`_handleCommentThread`) is applied both for remote and local comments thread, we need\n        // to check if the thread was already attached to something.\n        if (!thread.isAttached) {\n          thread.attachTo(fieldHolder);\n        }\n        // Add highlight to the holder element to show that the field has a comment.\n        fieldHolder.classList.add('has-comment');\n        // Add `fieldHolder` to appropriate focus trackers.\n        // Annotations use focus trackers to reset active view when annotations becomes focused or blurred.\n        // However, we don't want to unset active annotation when something in `fieldHolder` is clicked.\n        // For that reason, we add `fieldHolder` to those focus trackers.\n        // Thanks to that, whenever `fieldHolder` is focused, given annotation will behave like it is focused too.\n        //\n        // This is too difficult to figure out when creating an integration so it might be changed (simplified) in future.\n        const threadView = repository._threadToController.get(thread).view;\n        const annotation = annotations.getByInnerView(threadView);\n        annotation.focusableElements.add(fieldHolder);\n      }\n    }\n    getInitialData() {\n      return `\n\t<h2>Bilingual Personality Disorder</h2>\n\t<p>\n\t\tThis may be the first time you hear about this made-up disorder but it actually isn’t so far from the truth. Even the studies\n\t\tthat were conducted almost half a century show that <strong>the language you speak has more effects on you than you realize</strong>.\n\t</p>\n\t<p>\n\t\tOne of the very first experiments conducted on this topic dates back to 1964.\n\t\t<a href=\"https://www.researchgate.net/publication/9440038_Language_and_TAT_content_in_bilinguals\">In the experiment</a>\n\t\tdesigned by linguist Ervin-Tripp who is an expert in psycholinguistic and sociolinguistic studies, adults who are bilingual\n\t\tin English in French were showed series of pictures and were asked to create 3-minute stories. In the end participants emphasized\n\t\tdrastically different dynamics for stories in English and French.\n\t</p>\n`;\n    }\n  }\n  EditorComponent.ɵfac = function EditorComponent_Factory(t) {\n    return new (t || EditorComponent)();\n  };\n  EditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditorComponent,\n    selectors: [[\"app-editor\"]],\n    viewQuery: function EditorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidebarContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.presenceListContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customControls = _t);\n      }\n    },\n    inputs: {\n      configuration: \"configuration\",\n      channelId: \"channelId\"\n    },\n    outputs: {\n      ready: \"ready\"\n    },\n    decls: 92,\n    vars: 8,\n    consts: [[1, \"centered\"], [\"href\", \"https://ckeditor.com/ckeditor-5/\", \"target\", \"_blank\", \"rel\", \"noopener noreferrer\"], [\"src\", \"https://c.cksource.com/a/1/logos/ckeditor5.svg\", \"alt\", \"CKEditor 5 logo\"], [\"href\", \"https://ckeditor.com/collaboration/\", \"target\", \"_blank\", \"rel\", \"noopener noreferrer\"], [\"href\", \"https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html\", \"target\", \"_blank\", \"rel\", \"noopener noreferrer\"], [1, \"message\"], [1, \"sample-wrapper\"], [1, \"sample-content\"], [1, \"custom-controls\"], [\"id\", \"control-1\"], [\"customControl\", \"\"], [3, \"click\"], [\"viewBox\", \"0 0 20 20\"], [\"d\", \"M2.5 9.41c0 3.54 3.24 6.42 7.23 6.42 1.03 0 2.02-.19 2.95-.56 1.65.93 1.79.98 3.62 1.63.3.11.57.13.61.05.04-.08.02-.43-.08-.75-.48-1.63-.87-1.77-1.01-3.32a5.87 5.87 0 0 0 1.15-3.47C16.97 5.88 13.72 3 9.73 3S2.5 5.88 2.5 9.41zm9.64 0c0-.52.44-.95.97-.95s.96.43.96.95c0 .53-.43.95-.96.95a.96.96 0 0 1-.97-.95zm-3.37 0c0-.52.43-.95.96-.95.54 0 .97.43.97.95 0 .53-.43.95-.97.95a.96.96 0 0 1-.96-.95zm-3.38 0c0-.52.44-.95.97-.95s.96.43.96.95c0 .53-.43.95-.96.95a.96.96 0 0 1-.97-.95z\"], [\"id\", \"control-2\"], [\"id\", \"control-3\"], [\"id\", \"control-4\"], [\"id\", \"control-5\"], [1, \"row\", \"row-editor\"], [3, \"editor\", \"config\", \"data\", \"watchdog\"], [1, \"sample-sidebar\"], [1, \"row\", \"row-presence\"], [1, \"presence\"], [\"presenceList\", \"\"], [1, \"sidebar-holder\"], [1, \"sidebar\"], [\"sidebar\", \"\"], [\"href\", \"https://cksource.com/\", \"target\", \"_blank\", \"rel\", \"noopener noreferrer\"]],\n    template: function EditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"div\", 0)(2, \"h1\")(3, \"a\", 1);\n        i0.ɵɵelement(4, \"img\", 2);\n        i0.ɵɵtext(5, \" CKEditor 5 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"nav\")(7, \"ul\")(8, \"li\")(9, \"a\", 3);\n        i0.ɵɵtext(10, \"Website\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"li\")(12, \"a\", 4);\n        i0.ɵɵtext(13, \"Documentation\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(14, \"main\")(15, \"div\", 5)(16, \"div\", 0)(17, \"h1\");\n        i0.ɵɵtext(18, \"CKEditor 5 collaborative editing with comments outside editor for Angular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" Open this sample in another browser tab to start real-time collaborative editing. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 6)(22, \"div\", 7)(23, \"h2\");\n        i0.ɵɵtext(24, \"Form controls\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 8)(26, \"p\", 9, 10)(28, \"select\")(29, \"option\");\n        i0.ɵɵtext(30, \"Select\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_31_listener($event) {\n          return ctx.onClick($event, \"control-1\");\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(32, \"svg\", 12);\n        i0.ɵɵelement(33, \"path\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(34, \"p\", 14, 10)(36, \"select\")(37, \"option\");\n        i0.ɵɵtext(38, \"Select\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_39_listener($event) {\n          return ctx.onClick($event, \"control-2\");\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(40, \"svg\", 12);\n        i0.ɵɵelement(41, \"path\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(42, \"p\", 15, 10)(44, \"select\")(45, \"option\");\n        i0.ɵɵtext(46, \"Select\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_47_listener($event) {\n          return ctx.onClick($event, \"control-3\");\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(48, \"svg\", 12);\n        i0.ɵɵelement(49, \"path\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(50, \"p\", 16, 10)(52, \"select\")(53, \"option\");\n        i0.ɵɵtext(54, \"Select\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_55_listener($event) {\n          return ctx.onClick($event, \"control-4\");\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(56, \"svg\", 12);\n        i0.ɵɵelement(57, \"path\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(58, \"p\", 17, 10)(60, \"select\")(61, \"option\");\n        i0.ɵɵtext(62, \"Select\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(63, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EditorComponent_Template_button_click_63_listener($event) {\n          return ctx.onClick($event, \"control-5\");\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(64, \"svg\", 12);\n        i0.ɵɵelement(65, \"path\", 13);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(66, \"h2\");\n        i0.ɵɵtext(67, \"Editor 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 18);\n        i0.ɵɵelement(69, \"ckeditor\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"h2\");\n        i0.ɵɵtext(71, \"Editor 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 18);\n        i0.ɵɵelement(73, \"ckeditor\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(74, \"div\", 20)(75, \"div\", 21);\n        i0.ɵɵelement(76, \"div\", 22, 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"div\", 24);\n        i0.ɵɵelement(79, \"div\", 25, 26);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(81, \"footer\")(82, \"div\", 0)(83, \"p\")(84, \"a\", 1);\n        i0.ɵɵtext(85, \"CKEditor 5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(86, \" \\u2013 Rich text editor of tomorrow, available today \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"p\");\n        i0.ɵɵtext(88, \" Copyright \\u00A9 2003-2024, \");\n        i0.ɵɵelementStart(89, \"a\", 27);\n        i0.ɵɵtext(90, \"CKSource\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(91, \" Holding sp. z o.o. All rights reserved. \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(69);\n        i0.ɵɵproperty(\"editor\", ctx.Editor)(\"config\", ctx.editorConfig1)(\"data\", ctx.data)(\"watchdog\", ctx.watchdog);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"editor\", ctx.Editor)(\"config\", ctx.editorConfig2)(\"data\", ctx.data)(\"watchdog\", ctx.watchdog);\n      }\n    },\n    dependencies: [i1.CKEditorComponent],\n    styles: [\".sample-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;position:relative;width:100%}.sample-sidebar[_ngcontent-%COMP%]{min-height:100vh;width:400px;padding:0 20px 20px;border-left:1px solid var(--ck-color-base-border);border-bottom:1px solid var(--ck-color-base-border);background:hsl(0,0%,98%)}.sidebar[_ngcontent-%COMP%]{padding:0 10px;position:relative;width:100%;background:none;border:none;box-shadow:none;min-height:100%;font-size:20px;overflow:hidden;min-width:var(--ck-sample-sidebar-width)}.sample-content[_ngcontent-%COMP%]{max-width:960px;margin:30px auto 0}.row-presence[_ngcontent-%COMP%]{--ck-color-base-text: #000;max-width:var(--ck-sample-container-width);position:relative;padding:10px 0;background:hsl(0,0%,98%);z-index:20}.row-presence[_ngcontent-%COMP%]:after{content:\\\"\\\";width:calc(100% + 40px);position:absolute;height:2px;bottom:0;background:white;left:-20px}.presence[_ngcontent-%COMP%]   .ck.ck-presence-list__counter[_ngcontent-%COMP%]{order:2;margin-left:var(--ck-spacing-large)}.presence[_ngcontent-%COMP%]   .ck.ck-presence-list__list-item[_ngcontent-%COMP%]{margin-left:0}.custom-controls[_ngcontent-%COMP%]{margin-top:15px;margin-bottom:15px}.has-comment[_ngcontent-%COMP%]{border:2px solid var(--ck-color-comment-marker);background:var(--ck-color-comment-marker)}.has-comment.active[_ngcontent-%COMP%]{border:2px solid var(--ck-color-comment-marker-active);background:var(--ck-color-comment-marker-active)}.custom-controls[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]::-ms-expand{display:none}.custom-controls[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{border:1px solid hsl(0,0%,70%);padding:5px 10px;appearance:none;background-image:url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E);background-repeat:no-repeat,repeat;background-position:right .7em top 50%,0 0;background-size:.65em auto,100%;height:34px;border-radius:2px;width:200px}.custom-controls[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{display:flex;width:255px;padding:5px;border:2px solid transparent;margin:0 0 5px;outline:none}.custom-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border-radius:2px;cursor:pointer;margin-left:10px;height:34px;width:34px;transition:.2s ease background;background:#fff}.custom-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:hsl(0,0%,90%)}.custom-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin-top:5px}\"]\n  });\n  return EditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}