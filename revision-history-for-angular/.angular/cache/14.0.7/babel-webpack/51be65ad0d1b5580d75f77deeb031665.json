{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nexport function getLoadSaveIntegration(appData) {\n  return class LoadSaveIntegration {\n    constructor(editor) {\n      this.editor = editor;\n    }\n    static get requires() {\n      return ['RevisionHistory', 'TrackChanges', 'Comments'];\n    }\n    init() {\n      const usersPlugin = this.editor.plugins.get('Users');\n      const trackChangesPlugin = this.editor.plugins.get('TrackChanges');\n      const commentsRepositoryPlugin = this.editor.plugins.get('CommentsRepository');\n      const revisionHistory = this.editor.plugins.get('RevisionHistory');\n      const revisions = appData.revisions || [];\n      // Load the users data.\n      for (const user of appData.users) {\n        usersPlugin.addUser(user);\n      }\n      // Set the current user.\n      usersPlugin.defineMe(appData.userId);\n      // Load the comment threads data.\n      for (const commentThread of appData.commentThreads) {\n        commentThread.isFromAdapter = true;\n        commentsRepositoryPlugin.addCommentThread(commentThread);\n      }\n      // Load the suggestions data.\n      for (const suggestion of appData.suggestions) {\n        trackChangesPlugin.addSuggestion(suggestion);\n      }\n      // Load revisions data\n      for (const revisionData of revisions) {\n        revisionHistory.addRevisionData(revisionData);\n      }\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}